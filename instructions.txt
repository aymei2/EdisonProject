HOW TO INSTALL YOUR ADHOC      *      *      *     *     *      *      *     *  
--------------------------------------------------------------------------------

For Full-Kit Adhocs, please refer to the installation instructions 
in the official documentation.

For Changefiles (or "Patch") Adhocs, please follow the instructions below.

----------------------------
STEP 1: Stop any Ensemble Productions!

  Regardless of Adhoc type, ANY RUNNING ENSEMBLE PRODUCTIONS should be stopped
  prior to installation in order to maintain consistent behavior. Please speak
  with a Support advisor if it is not possible to stop the production.

----------------------------
STEP 2: Privileges

  Please make sure that the user installing the patch has privileges at the
  Operating System level as well as CachÈ privileges.

----------------------------
STEP 3: Document your Adhocs

  We very strongly recommend that you keep track of your Adhoc files in a
  standardized fashion.

  To help facilitate this, we highly recommend using the following
  instructions in STEP 4 to extract your Adhoc files to a consistent file
  structure.

  If you have another system in place, please read STEP 4 anyway to see how
  we use <mgr_dir>, <install_dir>, and <adhoc_dir> in our terminology. Then,
  please continue to STEP 5.

**WARNING**
  - Only System Executables Adhocs will update the $zv string of your instance.
  - Only SYSPatch.XML Adhocs will update the ^%qPatch global.
  - For ALL OTHER types of changefiles Adhocs, there will be no indication that
    your instance has received an Adhoc.
** Please keep a careful record of all of the Adhocs you have installed. **

----------------------------
STEP 4: Copy the Adhoc files

  A. Please navigate to the mgr directory for the instance you are updating.

     In these instructions, we will refer to the full path of your mgr
     directory as "<mgr_dir>".

     Likewise, "<install_dir>" should be the path of the drive and directory
     where your CachÈ or Ensemble configuration is installed.

     We use "\" throughout to indicate file paths; for Unix patches, please
     replace this with "/", and for VMS use the local syntax of [dir.subdir]

     For example, if we ask you to set a string as "<mgr_dir>\example.txt",
     your string might be something like

	    "C:\InterSystems\Cache\mgr\example.txt"       for Windows
	or  "/Applications/Cache/mgr/example.txt"	  for Unix
	or  "D$DB1:[intersystems.cache.mgr]example.txt"	  for VMS

  B. In <mgr_dir>, create a directory called iscpatches (if it does not exist yet.)

  C. Copy the directory adhoc<number> from the Adhoc zip, tarfile or save set
     to <mgr_dir>\iscpatches\ .

     Here, adhoc<number> contains the number of your Adhoc, e.g. adhoc12345
     and <temp_dir> refers to the location of your unzipped Adhoc files.

    * Windows:
	Create a subdirectory in iscpatches called 'adhoc<number>' 
	xcopy /E <temp_dir>\adhoc<number> <mgr_dir>\iscpatches\adhoc<number>

    * Unix:
	cp -pr <temp_dir>/adhoc<number> <mgr_dir>/iscpatches/

    * VMS: 
	Create a subdirectory in [.iscpatches] called adhoc<number>
	copy <disk>[<temp_dir>.adhoc<number>...]*.* <DISK>:[<mgr_dir>.iscpatches.adhoc<number>...]


	To extract Adhoc files from a .BCK, restore the Adhoc .BCK file to [<adhoc_dir>] :
	BACKUP <disk>:[<temp_dir>]<adhoc_file>.bck/save <disk>:[<adhoc_dir>...]

	Example:
	 BACKUP disk0:[download]C2013_1_3_601_0_12345.BCK/save disk1:[myadhocpath...]

  D. Please verify that the permissions on <mgr_dir>\iscpatches\adhoc<number>
     and its subdirectories are WRITEABLE for the user who will be applying the
     Adhoc.

  E. We will refer to this <mgr_dir>\iscpatches\adhoc<number> directory as
     <adhoc_dir> in the remainder of these instructions.

  Terminology review:

  * <install_dir> = Your instance's install location, e.g. C:\Intersystems\Cache
  * <mgr_dir>	  = Full path of mgr directory, e.g. C:\Intersystems\Cache\mgr
  * <adhoc_dir>	  = Path to extracted Adhoc files, e.g.
				C:\Intersystems\Cache\mgr\iscpatches\adhoc12345
  * <temp_dir>    = Path to temporary location of unextracted files

----------------------------
STEP 5:

  Please use the INDEX below to find the specialized instructions for your
  particular Adhoc.
 
  Your Adhoc patch may include several of the different file types listed.
  Unless otherwise instructed, you should install your files in the order given
  by the Index: System executables first, Patches next, then globals, etc.


--------------------------------------------------------------------------------
INDEX	 of changefiles Adhoc installation instructions  *      *      *     *  
--------------------------------------------------------------------------------

1) SYSTEM EXECUTABLES (also called "System Binaries")

     1A. System Executables for WINDOWS
     1B. System Executables for UNIX
     1C. System Executables for VMS

2) PATCH Adhocs

     - SYSPatch.XML
     - HSLibPatch.XML

3) GLOBAL updates

     - SYSGlobals.GO

4) CLASS updates

     - CacheSysUpdate.XML
     - EnsembleUpdate.XML
     - HSUpdate.XML
     - ViewerLibUpdate.XML

5) ROUTINE updates

     - update.RSA

6) ENCRYPTED files

     - CDCACHE.ENC

7) OTHER files to be installed "AS-IS"

     - CacheDB.JAR
     - CStudio.EXE
     - *.JS files
     - LIBRARY updates ( *.DLL, *.SO, *.SL, or VMS shared image *.EXEs )
     - Perl or Python bindings (pythonbind*.c, PERLBIND.xs)
     - *.XSL files

Z) How to make CACHELIB read/write
   (Used in several installation scenarios)


--------------------------------------------------------------------------------
Adhoc installation instructions      *      *      *     *     *      *      *  
--------------------------------------------------------------------------------

===========	 ===================================================	   =====
SECTION 1  |	  		  SYSTEM EXECUTABLES	   		   | 1 |
===========	 ===================================================	   =====

--- ------------------------------------------				   ----
1A)  Installing SYSTEM EXECUTABLES on WINDOWS |				  ( 1A )
--- ------------------------------------------				   ----

  Check for all four files in the Adhoc: cache.exe, cwdimj.exe, cstat.exe, and 
  (if applicable) cache.obj. We will be copying these files into the correct 
  locations.


  1. Stop CachÈ.

  2. Close the Cube: Right-click on the Cube and choose Exit.

  3. Back up these files to a safe location: (We recommend <adhoc_dir>\Backups)
	   <install_dir>\bin\cache.exe
	   <install_dir>\bin\cstat.exe
	   <install_dir>\bin\cwdimj.exe

  4. Copy the Adhoc files with extension .EXE into your configuration's bin
     directory. 
     To do this, run the following command in a Windows Command Prompt:

		copy <adhoc_dir>\c*.exe <install_dir>\bin

  5. If you are running CachÈ for multi-threaded callins, you will need to
     update additional library files. See "Using Callin with Multithreading"
     under our documentation on The Callin Interface for a description.

	A.) If you ARE NOT running multi-threaded callins:
		
		  In this case, the cache.dll, cachet.dll, cache.lib, and
		   cachet.lib files are not needed.

	B.) If you ARE running multi-threaded callins:

	      i.  In the <install_dir>\bin directory, you will find four files:
		    cache.dll, cachet.dll, cache.lib, and cachet.lib.
		    Back up all four files to a safe location.

	      ii. Please copy the updated files from the adhoc to this directory,
		    using the following commands in the Windows Command Prompt:

	   	   copy <adhoc_dir>\cache.dll <install_dir>\bin
	   	   copy <adhoc_dir>\cache.lib <install_dir>\bin
	   	   copy <adhoc_dir>\cachet.* <install_dir>\bin

  6. If you have the CachÈ Engine link libraries installed (czf.c), then there
     will be a directory called: <install_dir>\Dev\Cache\callin.
	Check if this directory exists.

	A.) If you DO NOT have the link libraries installed:
		
		In this case, the cache.obj and cachet.obj files are not needed
		and you may proceed to step 7.

	B.) If you DO have the link libraries installed:

	      i.  Back up <install_dir>\Dev\Cache\callin\cache.obj to your safe
	          location.

	      ii. Please copy the updated cache.obj file to this directory,
		   using the following command in the Windows Command Prompt:

	   	   copy <adhoc_dir>\cache.obj <install_dir>\Dev\Cache\callin

	      iii. If you are also running multi-threaded callins, proceed to
		   part C. Otherwise, continue to Step 7.

	C.) If you are running multi-threaded callins:
		
	      i.  Back up <install_dir>\Dev\Cache\callin\cachet.obj to your safe
	          location.

	      ii. Please copy the cachet.obj file to this directory, using the
		   following command in the Windows Command Prompt:

	   	   copy <adhoc_dir>\cachet.obj <install_dir>\Dev\Cache\callin

  7. Start CachÈ.


--- ------------------------------------------				   ----
1B)   Installing SYSTEM EXECUTABLES on UNIX   |				  ( 1B )
--- ------------------------------------------				   ----

  Check for all files in the Adhoc: cache.exe, cwdimj, cstat, and (if applicable)
  cache.o, libcache.sl, and/or cuxd. We will be copying these files into the
  correct locations.

  (If your Adhoc includes *.so files, install them afterwards. See SECTION 7.)


  1. Stop CachÈ. (ccontrol stop <configuration>)

  2. Log in as root so that ownership and permissions will be maintained.

  3. Back up these files to a safe location: (We recommend <adhoc_dir>/Backups)
	   /<install_dir>/bin/cache
	   /<install_dir>/bin/cstat
	   /<install_dir>/bin/cwdimj

  4. Copy cache from either the "eightbit" or "unicode" folder as appropriate:
	cp /<adhoc_dir>/<8bit_or_uni>/cache.exe /<install_dir>/bin/cache

    NOTE: The executable MUST be renamed from cache.exe to cache

  5a.  ONLY IF you have the CachÈ Engine link libraries installed (czf.c), link
       cache.o to the libraries you will use for callin, and install it in place
       of cache.exe. See the Documentation on Calling Out of CachÈ.

  5b.  If you link your CachÈ executable and use the callin interface, you will
       need to update additional files. See the Documentation on The Callin
       Interface for a description.

	A.) If you ARE NOT using the callin interface:
		
		  In this case, the libcache and libcachet shared library files
		    are not needed.

	B.) If you ARE using the callin interface:

	      i.  In the <install_dir>/bin directory, you will find two files:
		    libcache.so and libcachet.so .
			(Note: Depending on version, these may be .sl files.)
		    Back up both files to your safe location.

	      ii. Please copy the updated files from the adhoc to this directory,
		    using the following command:

	   	   cp <adhoc_dir>/libcache* /<install_dir>/bin

  6. In versions prior to 2011.1.0, there will also be a cuxd executable on your
      instance. For 2011.1.0 and later versions, please skip to step 7. If you
      have a version with cuxd, please run the following commands:

	 cp /<install_dir>/bin/cache /<install_dir>/bin/cuxd
  	 chmod 4500 /<install_dir>/bin/cuxd

  7. Copy cstat from either the eightbit or unicode folder as appropriate:
	cp /<adhoc_dir>/<8bit_or_uni>/cstat /<install_dir>/bin/cstat

  8. Copy cwdimj from either the eightbit or unicode folder as appropriate:
	cp /<adhoc_dir>/<8bit_or_uni>/cwdimj /<install_dir>/bin/cwdimj

  9. Start CachÈ. (ccontrol start <configuration>)


--- ------------------------------------------				   ----
1C)   Installing SYSTEM EXECUTABLES on VMS    |				  ( 1C )
--- ------------------------------------------				   ----

  The following instructions apply to versions after 2010.1.6.

  Once extracted from the .BCK, your Adhoc files will include the directories:
     [.SHARED], [.EIGHTBIT], and [.UNICODE].

  IF you are running VMS 8.4, then your adhoc should also include directories
     [.EIGHTBIT84] and [.UNICODE84].

  1. Stop CachÈ. (CCONTROL STOP <configuration>)

  2. BACKUP a save set of [<install_dir>.BIN] to a safe location.
     We recommend creating a [<adhoc_dir>.Backups] directory.

  3. CCONTROL UNLOAD <configuration>

  4. Copy the Adhoc files from the [SHARED] directory to the [.BIN] directory of
     your installation.

	COPY <disk>:[<adhoc_dir>.SHARED]*.* <disk>:[<install_dir>.BIN]

  6. Copy Adhoc files from either [EIGHTBIT] or [UNICODE] (as appropriate) to
     the [.BIN] directory of your installation.

	COPY <disk>:[<adhoc_dir>.<platform>]*.* <disk>:[<install_dir>.BIN]

	Example:
	 COPY disk1:[myadhocpath.UNICODE]*.* disk2:[myinstalldir.BIN]

  7. ONLY IF you are running VMS 8.4, you must now copy the Adhoc files from 
     either [.EIGHTBIT84] or [.UNICODE84] (as appropriate) to the [.BIN]
     directory of your installation as well.

	Example:
	 COPY disk1:[myadhocpath.UNICODE84]*.* disk2:[myinstalldir.BIN]

     If you are not running VMS Itanium 8.4, you do not have to copy these files.

  8. CCONTROL LOAD <configuration>

  9. Start CachÈ (CCONTROL START <configuration>)


===========	 ===================================================	   =====
SECTION 2  |		 PATCH Adhocs  (SYSPatch, HSLibPatch)       	   | 2 |
===========	 ===================================================	   =====

  While changefiles Adhocs may be referred to generically as "patches," the
  instructions below only apply to these files that are actually named "Patch."

  There are two kinds of Patch Adhoc files:
  SYSPatch<Adhoc#>.xml (common)   and    HSLibPatch<Adhoc#>.xml (rare).

  These instructions use "<patch_name>" to refer to the name of your patch file,
  e.g. SYSPatch12345, HSLibPatch12345.

  Both Patch Adhocs are installed using the same instructions, except that
  SYSPatches should be installed in the %SYS namespace, and HSLibPatches should
  be installed in the HSLIB namespace.

  Installing Patch Adhocs is a two-step process.

  The first step may be accomplished either using a CachÈ Terminal or through
  the Cube (via the Management Portal).


 * STEP 1. Load the Patch.xml file:

     OPTION A.)  At a CachÈ Prompt...
	
	  a. Follow the instructions in SECTION Z to make CACHELIB writeable.
	
	  b.  Navigate to the correct namespace.

	      * For SYSPATCH Adhocs ONLY:

		  Go to the %SYS namespace by entering
			zn "%SYS"    -- or --    do ^%MGDIR

	      * For HSLIBPATCH Adhocs ONLY:

		  Go to the HSLIB namespace by entering
			zn "HSLIB"

	  c.  Enter the following commands in the terminal window.

		set path="<adhoc_dir>\<patch_name>.XML"
		do $SYSTEM.OBJ.Load(path)

	      You should see output of the form:

		    Load started on 10/23/2013 12:56:20
		    Loading file X:\myadhocpath\SYSPatch12345.xml as xml
		    Imported object code: %SYS.PATCH
		    Imported global: ^CacheTempPatch
		    Load finished successfully.

	  d.  Go to STEP 2.

     -- OR --

     OPTION B.) Through the Cube...

	   a. Follow the instructions in Section Z to make CACHELIB writeable.
	
	   b. In the Cube menu, click "Management Portal" to start a session.
		(Prior to 2011, this is called the "System Management Portal.")

	   c. Navigate to the Class viewer.

		 * In 2010 or earlier, click "Classes" in the "Data Management" 
		    section.

		 * In 2011 and later, navigate to System Explorer > Classes
		    and click Go.

	   d. Highlight "Namespaces" on the left side of the Classes page, then
	      highlight the correct namespace:

		 * For SYSPATCH Adhocs ONLY, highight %SYS
		 * For HSLIBPATCH Adhocs ONLY, highlight HSLIB

	   e. Click "Import."

	   f. In the textbox ("Enter the path..."), Browse for or enter the
	      path where your Patch Adhoc file is located.

	   g. Click on the "Open" button to display the list of items to import.

	   h. Click the "Select All" Button to import the whole patch.

	   i. Uncheck the box "Check here to compile imported items".
	      (NOTE: NEITHER CHECKBOX SHOULD BE CHECKED.)

	   j. Click "Import" Button. You should see output of the form: 

		 Import from file: X:\myadhocpath\SYSPatch12345.xml
		 Load started on 10/23/2013 12:58:06
		 Loading file X:\myadhocpath\SYSPatch12345.xml as xml
		 Imported object code: %SYS.PATCH
		 Imported global: ^CacheTempPatch
		 Load finished successfully.
	   k.  Go to STEP 2.


 * STEP 2.  Apply the patch.
	
	At a CachÈ Prompt...

	   a.  Navigate to the correct namespace.

	       * For SYSPATCH Adhocs ONLY:

		  Go to the %SYS namespace by entering
			zn "%SYS"    -- or --    do ^%MGDIR

	       * For HSLIBPATCH Adhocs ONLY:

		  Go to the HSLIB namespace by entering
			zn "HSLIB"

	   b. To load the patch, run the following:

		 do ^%SYS.PATCH

		(This command is the same for both SYSPatches and HSLibPatches)


	   You will see a description of the patch, of the following form:

		Apply Patch Utility
 
		Adhoc: 12345
		Description: CLP0000
		Created at: 2013-10-23 12:50:03
		Created on $zv: Cache for Windows (x86-64) 2013.1.2 (Build 601U)

	  c. When prompted, choose Y to apply the patch:
 
		Apply (Y/N) Y
 
		Applying Patch...
 
		%SYS.SOMECODE.OBJ%foo.OBJ         %bar.OBJ
		^rOBJ                                 ^rINDEX
		Successfully Applied!

	  d. Return CACHELIB to Read Only permissions. (See Section Z.)
 
	  e. Please test the patch.


 * REMOVAL

     If you need to remove the most recent patch, please run the following
     commands in the %SYS or HSLIB namespace, as appropriate.


	  d Restore^%SYS.PATCH(1)
 
	  Restoring...
 
	  ^rOBJ                                   ^rINDEX
	  Successfully Restored


===========	 ===================================================	   =====
SECTION 3  |		    GLOBAL Updates   (SYSGlobals.GO)        	   | 3 |
===========	 ===================================================	   =====

  Adhocs of the form SYSGlobals<Adhoc#>.GO contain globals that should be
  installed from the %SYS namespace.

  There are two ways to do this: either using the Cube (via the Management 
  Portal), or in a CachÈ Terminal, using the older Global Input utility.


 OPTION A.) Through the Cube...

      1. Follow the instructions in Section Z to make CACHELIB writeable.

      2. In the Cube menu, click "Management Portal" to start a session.
	 (Prior to 2011, this is called the "System Management Portal.")

      3.Navigate to the Class viewer.

	  * In 2010 or earlier, click "Globals" in the "Data Management" 
	    section.

	  * In 2011 and later, navigate to System Explorer > Globals
	    and click Go.

      4. Click the "Databases" radio button to select it, and select the
	 CACHELIB database.

      5. Browse to your SYSGlobals.go file, make sure all items are selected,
	 and click Import. You should see output of the form:

		Import from file: X:\myadhocpath\SYSGlobals12345.go
		Load started on 10/23/2013 21:19:20
		Loading file X:\myadhocpath\SYSGlobals12345.go as gbl
		Imported global: ^%foo
		Imported global: ^%bar
		Load finished successfully.

      6. Remember to return CACHELIB to Read Only permissions. (See Section Z.)

      7. Please keep your own records of any Adhocs installed this way.


  -- OR --

  OPTION B.) At a CachÈ Prompt...
	
      1. Follow the instructions in Section Z to make CACHELIB writeable.

      2. Navigate to the %SYS namespace by entering:

	    USER>zn "%SYS"   -- or --   USER>do ^%MGDIR

      3. Enter the following command in the terminal window:
		
	    %SYS> d ^%GI

      4. At the Device prompt, enter the path to the Adhoc files ( <adhoc_dir> ).

      5. Import the globals with parameters "RS" and option A (to import all.)
	 You should see output of the form:

		%SYS>d ^%GI

		Global input

		Device: X:\myadhocpath\SYSGlobals12345.go
		Parameters? "RS" =>
		Globals were saved on 23 Oct 2013   9:31 PM   Cache
		with description: CLP0000,XYZ0000

		Input option: a
		^%foo	^%bar
		%SYS>

      6. Remember to return CACHELIB to Read Only permissions. (See Section Z.)


===========	 ===================================================	   =====
SECTION 4  |	      CLASS Updates   (<namespace>_Update.XML)        	   | 4 |
===========	 ===================================================	   =====

  There are four kinds of Class Update Adhoc files:

  CacheSysUpdate<Adhoc#>.xml    contains class files for the %SYS namespace
  EnsembleUpdate<Adhoc#>.xml    contains class files for an Ensemble namespace
  HSUpdate<Adhoc#>.xml 		contains class files for the HSLib namespace
  ViewerLibUpdate<Adhoc#>.xml 	contains class files for the viewerlib namespace

  All four kinds of Class Update Adhocs are installed using essentially the
  same instructions, except that each should be run in the appropriate namespace.

  These instructions use "<ClassUpdate>.XML" to refer to the name of your
  patch file, e.g. CACHESYSUpdate12345.xml


  1. Back up the whole CACHE.DAT for your target namespace to a separate
     location. This ensures that your current classes are properly saved.
     The only way to back out a Class Update Adhoc is to restore the CACHE.DAT.

  2. ONLY IF you are installing a CacheSys Class Update, you must temporarily
     make the CACHELIB database writeable in order to apply the Adhoc file.
     Follow the instructions in Section Z to make CACHELIB writeable.

  3. Navigate to the correct namespace.

      a.  For CacheSys Class Updates ONLY:

	  Go to the %SYS namespace by entering
		zn "%SYS"    -- or --    do ^%MGDIR

      b. For Ensemble Class Updates ONLY:

	  * In versions prior to 2012, navigate to the ENSLIB namespace:
	 	zn "ENSLIB"

	  * In 2012.1.0 and later versions, navigate to an Ensemble namespace:

		zn "ENSEMBLE"

              If the default Ensemble namespaces (ENSEMBLE and ENSDEMO) are not
	      available, any Ensemble namespace may be used for a 2012+ install.

      c. For HS Class Updates ONLY:

	  Go to the HSLIB namespace by entering
		zn "HSLIB"

      d. For ViewerLib Class Updates ONLY:

	  Go to the VIEWERLIB namespace by entering
		zn "VIEWERLIB"

  4. Enter the following commands in the terminal window:
		
	  set path="<adhoc_dir>\<ClassUpdate>.XML"
	  do $SYSTEM.OBJ.Load(path,"cbrpsuy")

     You should see output of the form:

		Load started on 10/23/2013 19:17:13
		Loading file X:\myadhocpath\CacheSysUpdate12345.xml as xml
		Imported class: foo.bar
		Compiling class foo.bar
		Compiling routine foo.bar.1
		Load finished successfully.

     NOTE:
	Very rarely, a class update containing many classes may throw
	compilation errors as related classes try to compile incrementally.

	If this happens, please re-load the patch, or compile the problem class
	with the "f" flag to force the compile, as in this example:
		do $SYSTEM.OBJ.Compile("%DeepSee.ClassQueries","cbrspf")
	
	See $system.OBJ.Help() for more information on this command.

	The Adhoc should then finish successfully.
	If you continue to see errors, please contact Support.

  5. In versions prior to 2010.1.x, subclasses of the newly imported classes
     from Ensemble or HS Class Updates should be recompiled manually.

  6. If you ran a CacheSys Class Update, remember to return CACHELIB to
     Read Only permissions. (See Section Z.)


===========	 ===================================================	   =====
SECTION 5  |		    ROUTINE Updates   (update.rsa)        	   | 5 |
===========	 ===================================================	   =====

  There are two ways to install Adhocs files of the form update<Adhoc#>.rsa:
  using a CachÈ Terminal (preferred), or through the Cube (via the Management
  Portal).

  In both cases, you will export the original routines to a separate location
  before applying the patch. If you need to remove the patch, you may use the
  same steps given below to re-import this saved copy of the original file.

  To do this, you will need to know the name(s) of the routine(s) in this patch.


  OPTION A.) Using a Terminal Window...

	  a. Follow the instructions in Section Z to make CACHELIB writeable.

	  b.Navigate to the %SYS namespace by entering:

		 USER>zn "%SYS"	  -- or --   USER>do ^%MGDIR

	  c. Use the command "d ^%RO" to export a backup copy of the routine(s)
	      this patch will replace. We recommend using <adhoc_dir>\Backups.

	     Enter routines one at a time (.MAC, .INC, and .INT are accepted)
	      and press Enter when done. Save the backup as a .RSA file.

		The dialogue will have the following form:

			Routine output (please use %ROMF for object code output)
			Routine(s): %foo.INT
			Routine(s): bar.MAC
			Routine(s):
 
			Description: Backup prior to applying Adhoc 12345
 
			Output routines to
			Device: X:\myadhocpath\Backups\pre_12345.rsa
			Parameters? "WNS" =>
			Printer Format? No => No
			%foo.INT	bar.MAC
			%SYS>

	  d. Use the command "d ^%RI" to import the Adhoc from the
		update<Adhoc#>.rsa file. Choose "A" to import All Routines.

		NOTE: Be sure to answer "Yes" to overwrite the existing routine!

	  	You should see output of the form:

			%SYS>d ^%RI
 
			Input routines from Sequential
			Device: X:\myadhocpath\update12345.rsa
			Parameters? "RS" =>
 
			...

 			( All Select Enter List Quit )
 
			Routine Input Option: all Routines
 
			If a selected routine has the same name as one already
			  on file, shall it replace the one on file? No => yes
			Recompile? Yes => Yes
			Display Syntax Errors? Yes => Yes
 
			...

			2 routines processed.

	  e. Remember to return CACHELIB to Read Only permissions. See Section Z.

  -- OR --

  OPTION B.) Through the Cube...

      Step 1: Export a backup copy of the original routine(s).
	
	  a. Follow the instructions in Section Z to make CACHELIB writeable.

	  b. In the Cube menu, click "Management Portal" to start a session.
		(Prior to 2011, this is called the "System Management Portal.")

	  c. Navigate to the Routines viewer.

		 * In 2010 or earlier, click "Routines" in the "Data Management" 
		    section.

		 * In 2011 and later, navigate to System Explorer > Routines
		    and click Go.

	  d. Make sure "Namespaces" and "%SYS" are selected on the left side of 
	      the page.

	  e. Click "Export".

	  f. In the first textbox ("Enter the path..."), enter the path (with
	      file name and .ro extension) where you will back up the exported
	      routine(s). We recommend using <adhoc_dir>\Backups.

	  g. In the "Enter search mask" textbox, enter the routine name. To
	      export multiple routines, list all the names and separate them
	      with commas.

	     TIP: The search mask should be capitalized, e.g. JRNRESTO*,JRNRESTB*

	  h. The routine(s) should appear in the search results. Select the
	     routine(s) that this patch will replace.

	  i. Click "Export" to export the selected routine(s).

	  j. Continue to Step 2 below.

      Step 2: Apply the patch.

	  a. Click the Routines link in the upper-left corner to return to the
	      main Routines viewer page.

	  b. Click "Import", making sure "Namespaces" and "%SYS" are selected.

	  c. In the textbox ("Enter the path..."), Browse for or enter the path
	      to the update<Adhoc#>.rsa file.

	  d. Click on the "Open" button to see the contents of the file.

	  e. Make sure that all the routines for this Adhoc are selected, and
	      that the option to compile the imported items is checked.

		CAUTION: In CachÈ 2010.1.x, it may be necessary to compile these
			 items manually after they are imported.

	  f. Click on the "Import" button. You should see output of the form

			Import from file: X:\myadhocpath\update12345.rsa
			Load started on 10/23/2013 15:50:53
			Loading file X:\myadhocpath\update12345.rsa as rtn
			FOO.INT Loaded
			BAR.INT Loaded
			Load finished successfully. 

	  g. Remember to return CACHELIB to Read Only permissions. See Section Z.


===========	 ===================================================	   =====
SECTION 6  |		   ENCRYPTED Files   (CDCACHE.ENC)        	   | 6 |
===========	 ===================================================	   =====

  *.ENC Adhocs are encrypted server code. For more information, please see
  "Upgrading your CachÈ Direct Server" in the online documentation under
  Using CachÈ Direct > Installation and Upgrade.


  1. Stop any CachÈ Direct jobs that are running.

  2. In the Terminal, enter the following command:

	    do rload^%CDCrypt("<adhoc_dir>\CDCACHE.enc")

	
	You should see output of the following form:

		USER>d rload^%CDCrypt("X:\myadhocpath\CDCACHE.enc")
 
		decrypting routine %CDBatch, saving object.
		...
		USER>

  3. The prompt will return to the current namespace when the load is complete.


===========	 ===================================================	   =====
SECTION 7  |		  OTHER Files   (Distributed "AS-IS")        	   | 7 |
===========	 ===================================================	   =====

  Adhoc file types in this category are all essentially installed as-is. Please
  follow the instructions carefully, as some files have special considerations.

  These instructions apply to the following file types:
    CacheDB.JAR, CStudio.EXE, *.JS, *.DLL, *.SO, *.SL, Library *.EXEs,
    Perl or Python bindings, *.XSL
  

  1. Stop CachÈ.

  	* On WINDOWS: Also close the Cube (right-click and choose Exit.)

	* On UNIX: Log in as root to maintain file ownership and permissions.

	* On VMS: Also unload installed images by running
		  CCONTROL UNLOAD <configuration>

  2. Copy a backup of the original file to a safe location.
     (We recommend creating a <adhoc_dir>\Backups directory.)

	* For CacheDB.JAR Adhocs only:
		Back up each JDK* folder from <install_dir>\dev\java\lib
	    AND Back up <install_dir>\lib\CacheDB.jar

  3. Replace the old file with the new file from this Adhoc.

	* For CacheDB.JAR Adhocs only:

	   Copy EACH JDK* folder from the Adhoc over the appropriate folder in
	   the   <install_dir>\dev\java\lib   directory.

	   Then open the JDK* folder that matches your version of Java and copy
	   the CacheDB.jar file within to <install_dir>\lib\CacheDB.jar

  4. Restart CachÈ.

  5. For Windows DLL updates, you may need to register the new .DLLs.
       Please be sure you have Administrator permissions before attempting this.

       Users must take responsibility for registering undistributed libraries.


===========	 ===================================================	   =====
SECTION Z  |			Make CACHELIB Read/Write        	   | Z |
===========	 ===================================================	   =====

  In order to load InterSystems routines into the CACHELIB database, you must 
  make it writeable. There are two ways to do this: either using a CachÈ
  Terminal or through the Cube (via the Management Portal).

  Please remember to use the included instructions to return the CACHELIB
  database to Read-Only permissions when you are done installing your Adhoc.

  ---------------------------
  TO MAKE CACHELIB WRITEABLE:
  ---------------------------

     OPTION A.) At a CachÈ Prompt...
	
	1. Navigate to the %SYS namespace by entering:

		USER>zn "%SYS"   -- or --   USER>do ^%MGDIR

	2. Enter the following command to run the DATABASE utility:

		%SYS>d ^DATABASE	

	3. Navigate to "Edit a database" and enter "cachelib" when you get a
	   "Database directory?" prompt.  (Dialog varies slightly by version.)

		1) Create a database
		2) Edit a database
		...
	 
		Option? 2
	 
		1) Edit a database
		2) Add volumes to a database
	 
		Option? 1
		Database directory? cachelib


	4. At the "Field number to change?" prompt, enter the number that 
	  corresponds to the "Read Only" option. (Number varies by version.)

		1)  Directory:                      <mgr_dir>\cachelib\
		...
		12)  New global pointer block:       16
		13)  Read Only:                      Yes
		14)  Encrypted:                      No
 
		Field number to change? 13


	5. Change the Read Only value to "No" to make the database writeable.

	   Accept the remaining defaults and press Enter to exit each menu.

		Read Only? Yes => No
		Field number to change?
		Confirm update of database <mgr_dir>\cachelib\?
		  Yes =>
		Updating...
		Database <mgr_dir>\cachelib\ updated
		Mount CACHELIB At Startup? Yes =>
		Database directory?
	    
		...
	   
		%SYS>

	6. Close the CachÈ prompt. You may now write to the CACHELIB database.

  -- OR --

     OPTION B.) Through the Cube...

	1. In the Cube menu, click "Management Portal" to start a session.
		(Prior to 2011, this is called the "System Management Portal.")

	2. Click on 'Configuration' under the "System Administration" Heading.

	3. Click on "Local Databases."
	   In 2011 and later, this is under the "System Configuration" heading.

	4. Click "Edit" on the row for the CACHELIB database.

	5. Change the option "Read Only?" to NO.

	6. Click the "Save" Button.

	7. Click on "Home." You may now write to the CACHELIB database.

  ---------------------------------
  TO MAKE CACHELIB READ-ONLY AGAIN:
  ---------------------------------

    To make the CACHELIB database read-only, follow the same procedure above,
    but set the "Read Only" field to "Yes."

     OPTION A.) At a CachÈ Prompt...

	Using the ^DATABASE utility:
	Go to "Edit a database", enter cachelib, and set "Read Only" to Yes.

		Read Only? No => Yes
		Field number to change?
		Confirm update of database <mgr_dir>\cachelib\?
		  Yes =>
		Updating...
		Database <mgr_dir>\cachelib\ updated


	The database will now be read-only again.

  -- OR --

     OPTION B.) Through the Cube...

	In the Management Portal, navigate to view Local Databases, and click 
	"Edit" on the CACHELIB database.

	Change "Read Only" to Yes and click Save, then return to Home.

	The database will now be read-only again.
